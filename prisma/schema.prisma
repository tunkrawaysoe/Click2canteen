generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(cuid())
  name         String
  email        String      @unique
  restaurantId String?
  role         String?
  orders       Order[]
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
}

model Restaurant {
  id        String   @id @default(cuid())
  name      String
  phone     String
  address   String
  imageUrl  String?
  isOpen    Boolean  @default(true)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  menus     Menu[]
  orders    Order[]
  users     User[]
}

model Menu {
  id          String       @id @default(cuid())
  name        String
  price       Float
  category    MenuCategory
  description String?
  imageUrl    String?
  isActive    Boolean      @default(true)
  restaurant  Restaurant   @relation(fields: [restaurantId], references: [id])
  orderItems  OrderItem[]

  @@index([restaurantId])
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  restaurantId    String
  createdAt       DateTime    @default(now())
  status          OrderStatus @default(PENDING)
  totalPrice      Float
  deliveryAddress String?
  restaurant      Restaurant  @relation(fields: [restaurantId], references: [id])
  user            User        @relation(fields: [userId], references: [id])
  orderItems      OrderItem[]

  @@index([restaurantId])
  @@index([userId])
}

model AddOn {
  id              String           @id @default(cuid())
  name            String
  price           Float
  menuId          String
  menu            Menu             @relation(fields: [menuId], references: [id])
  orderItemAddOns OrderItemAddOn[]
}

model OrderItem {
  id              String           @id @default(cuid())
  orderId         String
  menuId          String
  quantity        Int
  price           Float
  menu            Menu             @relation(fields: [menuId], references: [id])
  order           Order            @relation(fields: [orderId], references: [id])
  orderItemAddOns OrderItemAddOn[]
}

model OrderItemAddOn {
  id          String    @id @default(cuid())
  orderItemId String
  addOnId     String
  addOn       AddOn     @relation(fields: [addOnId], references: [id])
  orderItem   OrderItem @relation(fields: [orderItemId], references: [id])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  DELIVERED
  CANCELLED
}

enum MenuCategory {
  APPETIZER
  MAIN
  DESSERT
  DRINK
  SNACK
}
